text adventure basic requirements:
    - move around the room - room should be split into sections each section contains different parts of the room
    - objects in the room - a class for intractable objects
    - ability to interact with objects - objects have interaction methods
    - can pick up objects - an inventory class or maybe an array in a player class
    - can use objects on other objects - an important interaction method, only called on objects in inventory

basic plan:
    - have a room, which contains a few objects, the player can interact with them
    - one of the objects is a key another is a door, the door will have a method to open it,
        when you interact with it they tend to call a method that moves you to a new location
        for now it will call the victory method
    - player can look around, see some stuff then pick up the key and leave, expand from there

Rooms:
    each room is initialised with a list of features - i.e. objects -
    along with having a description of the room's layout and any other
    data about the room such as checks that an obstacle has been passed
        that prevent access to an object until the player deals with them

    Rooms need:
        - a text description
        - array of items
        - array of complications
        - map of items to the complication - if any - that block them

    could make each room it's own class that extends the abstract room class so that a room is always initialised the same
    while following a standard template, and moving from room to room would be as simple as replacing one object with another object
    though not (usually) a new object since the player's changes should (usually) remain

complications:
    each complication is created with a description, a variable to store the object that can be used to solve the issue
    a boolean representing whether or not it has been solved, a string that states what it is
    methods for what happens when you try to interact with them - these may need variables for any messages output
    and a method to handle the complications - takes in the item being used on it and sees if it resolves - may need a resolve message

Items:
    each item is initialised with a description and a string that states what it is
    as well as methods for what happens when you interact with them in certain ways - may need variables for any messages output

    - complication can extend item

    added look, touch, and (for fun) lick verbs. only thing left is take, however this requires the inventory.

    wait should add a use method, so instead of obstacle having a resolve could have item have a use method
        this could take in a second parameter for the obstacle, if it is null the object is used alone,
        would need to add a function for using alone and the use with function
        use with will just call the obstacle's resolve function

    should also make item abstract and have each item be it's own class since they will eventually all have different effects
    and currently may sometimes do different things when used

    could consider doing the same for obstacle but I don't feel it is as necessary

    can call use when the user enters a set command and has the item in their inventory
    may want to make each item's itemIs something that can be output directly to the user so that they know what to type for each item
    maybe put them in quotes to highlight them

Player:
    currently will just have an inventory - a fixed size array of items that they are carrying, can expand upon it when the base is complete
        e.g. add health or ways to increase carrying capacity, other details about the player that could change

     will also have methods for altering the inventory such as addToInventory

     was going to add switch in there but maybe instead add that as a use method in item?
     so when you call it on an item it checks that you're holding that item and if so replaces it with the given item

     would be a pain since I need to access the inventory, could pass the player or inventory in I guess

     or could have the method called on the player object and take both items in
        this is preferred, should be easier to understand and keeps inventory management in player.java

      ah but i would also need to take in the room so I could leave the object, makes a bit more sense than giving the player to a switch method

Now that that's done i'll need to test it by creating a room and having a player with restricted inventory - 1 -
try to pick up two items then switch

if i'm going to be creating Rooms and items i'll want to create packages to group them

need a package for Rooms
a package for items
obstacles extend items so maybe have them in a single package, interactivity?, could have subpackages?  stick with one for now and see
player doesn't need it's own package, though later i'll be creating a Game class to keep main simple so maybe they can be grouped?

for now have Rooms and Interaction, player.java imports Rooms.room, Interaction.item and Interaction.obstacle shouldn't need the specified
types i don't think - consider using Interfaces instead of classes - look into how interfaces transfer variables

look into factories cause I just remembered they exist

Notes on testing: as long as the room is initialised correctly,
    - even if there are no blockages the map should map all items to null obstacles - maybe change later for efficiency

then the function would work, however there is an issue:
    I forgot to remove the item from the room when it is added to the player's inventory
    this means that items can be duplicated

so the remove method can't take the object from the room directly without taking it as a parameter
could instead have a wrapper method in room that takes the player and item in - the room could act as the control
for everything that happens in it - the methods that affect the pieces are called as part of room methods
for different situations

room will now need to include player so give it a package of game to store it in - see earlier notes

that now works as intended, now generate a wrapper for switching

back to working on player now that that has been handled, the player can take items and switch one for another
dropping an item can be added later since it is not really necessary just helpful

no other base player requirements that I can think of should merge this with master

now I create room wrapper methods for the item interaction methods
    these currently just call the item interaction method but I can use them for
    things such as player inventory checks for using or licking items etc since these wrappers contain the player object

 Also remember to set up obstacles to override the default item methods
 since while the same actions can be applied to them, obstacles would likely be interacted with
 in different ways, for example you need to pick up items to use or lick them, but you can't pick up obstacles
 also at some point I should let obstacles be blocked by other obstacles

 Also currently using the items directly in methods - this will likely require a method in room, that uses each item's itemIs
 to find the item that it represents, maybe a map maybe there's a better solution

    current idea when generating a room create a map of itemIs : item since the user's text input will use the itemIs directly
    that would mean the input could:
        first be checked to ensure it's a valid input
        then split into the necessary parts - itemIs(s) and the verb mostly
        then use the find method and/or map to get the desired items directly
            so they can be passed into the wrapped methods

Before setting up the standard tutorial room I'll need to test obstacle resolution
to do this, i'll create a door object that overrides use to show a win message when it opens and close the program
to open you would use use on it - which i'll need to add the override methods in obstacle.java
then create the door class

an issue:
    the check that the item is held is currently part of the room wrapper for use
    however this means that obstacles passed in would need to be picked up which is not allowed
    so I need to move the check inside the item.java ues method

    but this would require those methods take in the player

    a solution could be that the player would have the interaction methods
    and these could take in an item and call the related method from item


    Could be helpful but as far as I can see rn just seems overcomplicated - added a check for type obstacle that skips
    the inventory check for use

 Now that the basic mechanics are sorted I'll need to set up the actual game part of the game
 main should be mostly empty it should just have:

 a loop for while the game isn't over
 in this loop take in a user input and pass it into a method that makes a move
 this can be from a class dedicated to organising the game's operations
 this will eventually set a value for a variable in game representing the ending message
 when the loop ends this message is output and the game - program - ends

 game will be a class in the Game package
 it will contain variables and methods that determine what the game as a whole does
 e.g process user input and decide which room to load or move to- what method from room is called and on what items

 so the process first before the input process I'll need a set up method
    this will:
    output a brief introductory passage
    generate the tutorial room
    set up the game class so it knows where it is and is ready to carry out player instructions
    output the description of the room

About rooms:
    rooms should stay their own class - though it might make sense to make room item and obstacle interfaces?
        no they can't be interfaces as while those can ensure methods are passed on variables can't be without being static

    rooms CAN be created with a full constructor but have an empty constructor
    that allows for the creation of generic rooms of each type that are always the same
    and specially designed. - this also means that it is much easier to alter a specific room since you just change one file
    also makes it much easier to alter which rooms connect where since you just switch the object type

    so one thing is that doors need to lead too and from places - will need to add an additional value to door which is leadsTo

The Game Process:
    now that the game class can be used to initialise the start of the game I need to set up the processing of UI

    the game will every iteration of the main-while loop take in text from the user
    this text will be checked - format? length? regex??? - as part of, or before processing method??
    after being checked will be processed and the item(s) and verb will be isolated
    these will be used to determine what method is called and on which item

    could check the format before the processing then the actual contents during it

    to check the actual contents I'll need to get the map of Strings to Items for the current room and check it contains the key
    if it does check the verb and use that to decide what method is called

    ISSUE you can look at something when it's in your inventory or in the room
    so i'll need to check both - currently don't remove items from the rooms String,item HM
    need to do make that part of take item room wrapper method

    also need to remove it and from the item list and the map in the switchX_With_Y method
        this method already takes in the room in order to allow the item's to be switched between the room's item array and the player's inventory
        just need to have it also add the key for the new item and remove it for the old item

    now that taking and switching items removes/adds them from the room's Str-item HM I need
    to have the game class check both the room's items and the player's inventory when a
    user tries to interact with an item

    this required me to alter the player method for searching inventory to use the String itemIs to search
    since I can't pass the item in directly if it doesn't exist in the inventory or room

    need a way of searching the inventory - could just go through the array since it will likely be small - like at the largest 20 likely closer to 10 at most -
    or could make it another Map - for now iterate

    OR could make the search return the item or null if it's not there - did this

    having millions of classes for each room and item is a terrible idea tbh
    the benefit they give is god but can be achieved in another way for less cost

    current plan - create two factory classes in the Game package - 1 for item and another for rooms
    they will use methods to create instances of room and item - now no longer abstract -
    in specific ways - this means the rooms are easy to change but removes the need for countless classes

    Now need to set up the processing of switching and using items with obstacles

    need to go back to game.java and create the input parsing for useWith and switchWith

    I could use the split with the centre of the regex that finds verbs then
    check that it was split into three parts - if there aren't three parts the input was invalid
    otherwise process as normal

    could have an issue where

    big key useWith taste chocolate bar

    would be accepted but would not be valid

    also applies to the first check where for example "touch touch" would be allowed

    need to include the condition that each item's description cannot include any of the verbs

    will need to create another String for the verbs to make adding them to the regex easier

    an use [^...] to say capture anything but this so would that work with [^(verbsGroup)]???

    turns out the regex are just terrible in general

    still terrible and I have no idea how to fix them

    working on this part is actually painful and I hate it
    honestly wish it wasn't needed. Seriously it's such a pain

    The first Regex needs to:
        start with one of the verb words
        have a space
        then have any number of other words
        so long as it isn't one of the verb words

    The second regex needs to:
        Start with any number of words that aren't one of the verbs
        followed by a space and either switchWith or useOn
        then any number of words that aren't one of the verbs

    Time for a complete restart methinks

    before restart I had
    ---------------------------------------------------------------

    private final String verbs = "(lookAt|touch|use|taste|take)";
        private final String VERB_OBJECT_INPUT = "^" + verbs + " (?!" + verbs + ")[a-zA-Z]+$";
        private final String ITEM_VERB_ITEM_INPUT = "^[a-zA-Z' ]+ (useOn)|(switchWith) [a-zA-Z' ]+$";
        private final String INVALID_COMMAND_ERR_MSG = "this is not a valid command, please look at the format paragraph";

        private Pattern verbObjectPattern = Pattern.compile(VERB_OBJECT_INPUT);
        private Pattern itemVerbItemPattern = Pattern.compile(ITEM_VERB_ITEM_INPUT);

    ---------------------------------------------------------------

    maybe instead of one large regex I could use two smaller ones
    I could use one to check for "verb words" then if it passes put the words through a second regex that checks they don't contain
    any of the verbs - might not even need a second regex match could use .contains i think that can accept regex

    can split by space to get the first verb then could use the length of that
    to split the String in two and search the second section for the verbs

    could use subSequence to get the second section and then check for the regex " verbs( )?" ???
    using the space on either side means it only gets a word in the middle/ start of the chain of words
    but not one at the end so try to add the optional space at the end

    could add a " " to the start of item and then check for " verb" since
    without the space it would find verbs in the middle or at the end of the item itemIs
    but not the start, whereas with the space it will find any instance

    will need to remove the " at the start and end of the item description or the check will always fail

    test now passes when it should

    so the first regex is nearly sorted though I'll need to add the lookAt and
    switchWith to the array since they're not part of verbs

    that's done now need to set up the check for the second regex


    for the second need to start with a word then one or more words with spaces first
    then one of the two verbs
    then one or more spaces followed by words

    it seems to work well now

    Now the processing section of it

    one it passes the regex - need to find some way to split into three parts
    the two items and the verb

    so I have a list of words separated by space then one of the verbs_2 verbs then another list of words

    no check for the verbs so I can't just split by whichever verb the input contains

    I could check for the number contained??? and if it's one and the other is 0 then I could use split

    no specific method for finding the specific number in the String (at least not in java.String) though I could use
    indexOf and lastIndexOf and compare the two values for each of the two verbs to see if there is more than one of them
    remember checking for each of the verbs with a space on both sides since once I use that to split
    into three (split gives the items and the check gives the verb) I can check that the items don't contain any verbs

    want the method to iterate over verbs_2 so that if I ever add more the method still works
    this means I can't store the first and last index of each verb as a variable
    though I could use a 2d array or map of verb to array where the array is of size 2 and
    holds the first index and last index of the verb it represents

    might be smart to make the verbs and verbs_2 arrays global for the class
    or make them as part of the process method - would need to pass them into the sub methods though -
    instead of inside the check for verbs in items

    for now just create the array again inside the method for checking the second type of input

    iterate over the array and check if the index of the current verb in the input is not -1
    and if it isn't -1 check the lastIndex is the same - if it is split by this
    if the index is -1 switch to the next verb
    if the index don't match then output an error message
    all verbs won't be -1 since the regex has passed but on the off chance they somehow are output an error message

    this method doesn't need to store the index at all

    when determining which method to call need to use the verb to check if itemObj2 should be an item for switch or an obstacle for useWith
    need to do the verb check before the check for if the items are present

    issue is that the check would need to pass some information on to the switch - might be easier to check the second inside the
    switch

    now that the user input is set up I need to enable a method of winning the game

    currently want to win when the door is unlocked and used

    will require some way of calling a method specific to the room in a case specific to the room
    ideally related to interacting with an item or obstacle in the room.

    this would have been a lot easier if each room was a class however now that they aren't I'll need to find a new way

So what I could do is give room a result String - this would be set using added return values to the item interaction methods
would need new Strings added to already large constructors

at the end of processing the game can check the result String for instructions on what to do
e.g did using an item win the game? could have the item on use return a String that instructs the game.java class
to set the game to won and assign a specific victory method.

cons:
    - would need to follow a standard so that simple checks could apply to all types of messages
    - would need to add a String for each interaction to the item constructor
        - a pretty large number of added variables to an already large constructor

Pros:
    - simple to implement
    - could be easily expanded if using a simple enough standard


standard first idea:
    keyword-additionalData

    keywords would be words like winGame, harmPlayer, doNothing etc that tell the game what type of event has occurred

    additional data would need a similar format for each keyword but could be slightly different
    though for the initial use would just need to be a single line used whole
    doNothing would have no additional data
    winGame would just have the victory method


OR I could add several methods to room.java instead of game.java - the items would need some kind of return values
to determine which of these are carried out - now that I think about it it's essentially the same idea as above but
the methods go in room. This is less effective since it puts methods mostly unrelated to the room into room
and makes it more difficult to get the victory message to game.java

For now I'll go with my first idea and see if I find any problems with doing it that way which could require a change in approach

altering the items:
    first altered the constructor
    adding to item will add to obstacle as long as they aren't private
    should lookAt have an interaction message - for the sake of execution simplicity yeh
    so I don't need to check the command type

    wait maybe not - depending on how game works I could return nothing from the lookAt method call

    also the room would be returning the result of the method calls or null if the method is not called for whatever reason

    game then returns the result of that from it's methods for input processing that decide on what methods get called and
    the general process input will process the return value of whichever one is called

    item does not need a useOn result string since this can be part of the obstacle's resolve/resolveFail strings

altering the obstacles:
    first add the item values to the obstacle constructor
    then need to add values unique to obstacles

    should they do something when they resolve or fail to resolve? Maybe but not necessary at the moment
    just need to add one for when they're used without being resolved since use already returns a value

    now need to go back and make the interaction methods with retValues actually return them

altering room.java:
    now that the item and obstacle methods return the String values i'll need to alter room.java's wrapper methods
    so that they return the values returned by their functions - note: this process of doing things may remove the need for these wrappers
    look into this at some point

altering game:
    now that room is sorted need to have game return the value of the room methods and process it - for now just output
    at the end of the input processing method

altering factories:
    now that game s set up to handle the event system need to alter the factorise so the in use items and rooms are valid

processing events:
    now that the game can pass events to where they belong need to process them
    if non null split by -
    if result valid take first and check
    if winGame then set additional data to win message and gameWon to true
    if do nothing do nothing

    replace do nothing with a null value since that's what failure's return so it already symbolises no event

    while testing I found that using one item on another gives the wrong error message
    it should say that nothing happens and inform the user that useOn is for obstacles
    but instead claims the second item is not present.

    need to check when using useOn that the second item is an obstacle

    it doesn't seem to reach the method in the room class

    see where it gets to in game

    fixed that

    game set up is done I think - merge branches

    want to have a box and when opened it adds a new item to the room

    the box could be an item since you can pick it up
    first have using it add an item to the room
    then consider taking the box to boost inventory to three essentially allowing the player to carry two items
    though this would potentially require a lot of work since it would require taking and switching to
    have events attached which could require an increase to the event standard's complexity
    since switching would need to include the taking event of one item and the dropping event of another

    also will need to re-print the room's description whenever something changes
    I this could cause problems but will need to be done

    problems
        - when you take an item it will be null in the room's item array which means that the description will contain a null
            a fix would be to have a check for the used items indexes first and set the value for the ones that are null
            to be "an empty space"

            however this would require a check to be repeatedly made and so the description would need to be part of a method
            this clashes with the factory class idea

            a solution to this would be using a method in the game class called display current room
            that would go through each of the room's item indexes and check if they're null setting them to "a blank space"
            if they are  this would require that room be given a value of originalItemCount

            so I can't set an item to a String but I could change description to use the keyset of the itemIsToItem map
            since those are Strings

            OH NO WAIT

            a way better idea is to take the description and search for the sections encased in ""
            then checking the values of those to the keys of the hashMap and if they're not there replacing them with a blank space

            should I change the actual value - it would require less replacement if I did that
            but it could make adding items back in rather difficult
            I would need to search for "a blank space" and replace it after switching items

            it would be good to do the alteration of display earlier than i'm currently planning to do it
            but also it might be important to do it after an event occurs?

            probably not - it's important to display it after but I can change it before

            so Change it when an item is taken or removed - and redisplay it at the end of every turn

            oh and i'll need a setDescription method in room

            when an item is taken - need to alter the description to find and replace the item's itemIs with "an empty space"
            when a switch occurs - need to find the first "an empty space" and replace it with the left item, then do as above

            I'll want a method for both of those

            that now works so any altering of items will change the description

            now need to set up the box item

            how will the box hide an item?

            I could give it a use event that generates a new item so the box constructor would need to take in a String

            however it could be better to have it take in an item and then use itemIs of an existing item to identify it
            this would require some way to hide existing items

            well items are essentially only visible when they're added to the description
            so if I add the item directly to the box's constructor and when the box is used
            its event String can  be addItem-[the item's itemIs]

            may still need to give item the hidden boolean so that you can't use items you shouldn't know exist

            the addItem can  add a line of text on to the end of the description that states
            "in the box is a [itemIs]"

            Oops - forgot to add checks to ensure items only added or removed if the taking/ switching actually happens
            also need to add a limit to how many times an event can occur
            OH POINT TO LOOK BACK TO - I could probably come up with an object based event system as opposed to a text based one

            for only altering desc when taking or switching works made the player and room switch methods boolean
            and altered them, the room take method, and the game switch statements so that the switch statment
            knows if the action was successful and alters desc only if it was

    Plan for event limits - could add an additional part to the event String
    it would be a use limit however this would require some way of knowing
    which result String was being used for which item so would need a new format

    eventType-itemInteractedWith-additionalData-useLimitData

    eventType is a keyword like winGame, addItem etc
    itemInteractedWith is the itemIs of the item that triggered the event
    additionalData is any information needed to carry out the event i.e. the itemIs of the item revealed by opening a box
    useLimitData - csv separation, contains the type of interaction the flag triggered and the number of times it can happen
                        this is decreased unless it is noLim which means it can happen infinitely (implement later no need rn mostly for obstacles)
                        if this number hits 0 need to set the item's result Str for that interaction to null

    Instead of splitting the useLimData just make it two parts

    format:
            eventType-itemInteractedWith-additionalData-interactionType-usesLeft

    Resetting the item's value to null will require it's own method maybe?
    No could just put it after the switch statement;

    will need to account for using obstacles to cause events
    and items in the inventory

    could be in the items HashMap for the room if touch is the cause
    will be in inventory if use or taste are the cause
    will be obstacles hashmap if its an obstacle in which case could be any interaction as the cause

    obstacles not included yet but limits seem to work

    issue with limits - when it becomes null the event is ignored
    this means that the user is not informed of the effect

    instead of setting to null can leave null as the result of no event flag existing
    and set used up flags to have the keyword usedUp
    and set a handler for used up that informs the user

    I think that this was the last of the basic operations - I'll try setting up a new room

    The door in room one can open up into a clearing

    clearing contains:
        a stream
        a tree
        a bunch of vines
        two blocked paths
        an axe

     The stream blocks one path and the vines block the other
     the vines can be hacked away with the axe
     the tree can be cut down with the axe - this produces material to create a bridge over the river, either the tree or some wood
     the axe is laying by the tree

     what should a path be? an obstacle that's already resolved? can an obstacle be blocked by an obstacle?
     should I use a separate object for the blocked path? or use a standard path?
     standard path I think, and since obstacle extends item should be able to block
     obstacles with obstacles

     might be an idea to improve the item&obstacle System

     so some things aren't obstacles like paths however they can't be picked up
     also having a method that creates a generic object in a very specific way
     could maybe categorise items a bit better

     each of those could be a class and could have a factory for specific types of items

     types of items:
        obstacles   - doors, stream, vines
        tools   - key, chocolate, axe,
        interaction  - paths, buttons etc. essentially things you can interact with but not take - not obstacles though don't need to be resolved

        now another issue with the system is how every key is made the same way and every chocolate bar and wooden door etc.
        this isn't too big a deal but it might be better to have more general types that take in parameters
        like all keys follow the same vague description and usage etc but take in itemIs and other less unanimous details as parameters

        these would allow more variety in items and more organisation of items

        however rooms are still very set in stone
        no real way of making the rooms special just different items, though I can fix that later I suppose

        an idea could be to have classes of room - like threeSwitchesRoom which
        is just a room that also happens to have three boolean variables
        I'd have to give rooms some identifier since some events would only work with certain rooms

        so

           could instead of two separate classes have a boolean variable called isTool or something  that determines whether an item can be taken
           and change name from item to interactive or something

                now that this is implemented need to alter the take check to have it look for that boolean and not the class obstacle

                also speaking of Room I'll want to give room a method for each event that specifically alters a room

                and player a method for any event that specifically alters the player - not implemented atm

             had forgotten to prevent players taking blocked items - fixed
                think there might be too many checks in game.java when deciding what methods to do - may need to remove some
                if they're now in room wrapper methods where they should be

                added the checks in take and switch room wrappers

                now need to remove them from game.java to simplify it

                game should just check that the items exist in the room

                then if they do pass them on - may need to inspect how all methods are handled first

                like does useOn need specifically to take an obstacle second? yes so that check should stay

                this is what I need to look into - cleaning up the current code before working on the new stuff

                looking at game it doesn't have any checks in switchWith and useOn that aren't needed

                look into the room wrapper methods for useOn and switchWith - they might have unnecessary checks

                switch and useOn are fine

                look at verb-item switch in game for unnecessary checks

                has no checks other than that the item is present

                code seems cleaned up as much as can be done rn

        should add the visibility thing for items actually

        adding visibility I realised that some methods require items be picked up unless they're obstacles
        instead of checking for obstacle class I should check for canTake since this will let them work for
        Interactions like roads and buttons that can't be picked up

        looking at obstacle there doesn't seem to be any parts they have that aren't needed

        however could probably remove taste and have it be the use for items that can be tasted - it's kind of pointless otherwise

     Process of removing taste:

            go to interactive and remove the tastesLike and tasteResult Strings
            along with the taste method and remove all references to them from the constructor

            next move to interactionFactory and remove all references to taste
                - for edible item chocolate switch use and taste

            move to obstacle and remove all references to taste

            now need to move to game and remove references to taste
                - the regex, the verb lists, the format guide, the switch statements
                - also since use is not eat for edible items - need to remove the usedUp for useResult to say something different

            now finally to remove references to taste from the room class


    while testing found that you can switch with an item that is hidden

    need to look at the switch method in room

        issue was that the check for the item's visibility was too low in the method - the switch could happen before the check for visibility

   I'm putting too much in the game class - it's supposed to control the game but it does a lot of data processing
   this makes reading the class much harder - first fix is to create an event processing class

   this will contain the switch for deciding how to process the events - and methods that are carried out when the events occur

    game will need setter methods for it's return values the gameEnd boolean and the endMessage string

    the process event will need to take in the player and the current room

    as well as this I realised that there should only be 1 game and so it's variables should all be static
    for now only gameEnd and endMsg since these are used in set methods in eventProcessor
    and since game is not instantiated in the eventProcessor these need to be static methods

    now need to set up the processing methods in eventProcessor so that the switch statement isn't as messy

    after setting up standard methods now need to set up the processing of the event's limits

    one thing to note - it might be better to give each item a message for when it's been used up
    since there are different reasons that each item is limited

    should now add a class that will process input so that it isn't part of game since game is doing too much

    now want to move on to creating a second room - issues are
    the room needs a door to another room where it continues to
    however it should also have a door leading back to the tutorial room
        - not A tutorial room - THE tutorial room
            this would mean I'd need to store the rooms - this is bad use of storage

    also since the room takes in where it needs to lead to in it's constructor this would mean all rooms would need to
    be generated at the start of the game - terrible idea

    instead:
        could replace the leadsTo interactive with a String which specifies the room to move to when
        the door is used - this would then be used to check if that rooms exists* and if not create the default version

        * instead of storing the rooms could have a save and load method for items and rooms
            save takes in the interactive or room and converts all it's values into a single formatted String
            load takes in the formatted String and converts it to an interactive or room then returns it

            this would allow me to store an array of Strings that represent the visited rooms
            rather than the larger array of items - a map may be better could give rooms a unique identifier
            this would mean more efficient fetching of room data

    Another issue with this is the way the factory works
    it generates rooms with specific names but instead should maybe have classes of rooms

    could work perhaps
    say a type called a 2 door room - would take in all the room details and also an additional two Strings
        - comes from, leads to and creates doors for each of these

        wait issue - how would it know whether it was a door or a path etc. they're different since one is locked

    may still need a constructor for each room - though using door templates is useful for adding on to the main factory

    can say have a room with three buttons and this could be used to create a basic room in the roomFactory which has the additional feature
    of three buttons that need solved - also potential idea: for puzzles like the three buttons could give the room a non takable
    item called the puzzleSolver that is not included in the description but can be used if a solvePuzzle event (or something like that)
    occurs to represent that pushing the three buttons opens the door not using an item on it

    The room subtypes are not needed at the moment - work on altering how rooms are saved and moved between

    will need rooms to have an identifier to identify it in the map
    will need the save and load methods load method can take in the identifier String to use the map to find the saveString
    will need an event for moving rooms - when this occurs it should:
        - save the current room need to double check that put will overwrite the last value with that id
        - load the next room IF that room exists otherwise will generate it for the first time
        - set the loaded room to the currentRoom may need to give game a setter
        - output the description of the current room? maybe idk if just moving into it will do that already

    Should have a class to handle loading and saving and moving rooms - can be called in eventProcessor when a move event occurs
    so the room's roomId can be added directly in the room creation method, not passed in as a parameter - NB: not an issue rn
    these ID must be unique but since I control that it's fine
    the fact that I control the roomIds means I can put the id for the desired room directly into the other room's constructor

    still wary of a constructor per room but I can change that later if need be since the rooms are fixed
        a generic method can't really help with it


  first step:
    add an id String and a getid method to the room class
    then add an id to the tutorial room part of room factory

    next need to think about the format for the new event
       - SIDE NOTE: might be a good idea to make the beacons their own object or
             have constructor methods for different beacon Strings

    YEH that's smart
        can have a class of object called event
            - contains all the sections of the current event flags but has constructors and getter methods
            - when a flag is needed can pass the Strings into the constructor, also instead of
                splitting a String can have getter methods
            - processing that happens a lot can be made a method in the class


        So event process is
            event starts null, an input is given
            if input valid process input - this will return either null if no event
                or the result of the desired interaction method if there is an event
            the result of the interaction method is currently the interactive's resultStr for that interaction type


        I need to:
            create a class for events
            give this class a constructor and getter and setter methods - could have a setter for the event's belongs to which
             is called in the Interactive's constructor to set the event to belong to that interactive
            then alter the resultStr in item and obstacle to be event types
            then alter the factory classes to use these new constructors
            then alter game to have event be of type event
            then alter the event processor to use the event class
                instead of the current Strings


            event class should go in the game package since it's to do with controlling the game
                OR could have a base event class - but some events need different things
                could have classes of event - not one class per event but broad groups like:
                    - alterRoom - reveal an item, unlock a door etc.
                    - alterGameData, - affect player, etc. - not in use atm
                    - outputMessage - these events only need a msg variable: output message, win game, is used up etc.

            the abstract event class contains:
                the type of event   - Str
                the interaction it belongs to   - interactive
                the interaction type it represents  - Str
                the limit   - int
                the usedUp msg  - Str

                could have two constructors, one has a limit and a message
                the other doesn't, the one without auto assigns them to -1 and "can't be used up"
                since this prevents unnecessary typing

                also doesn't take in belongsTo since this will always be null
                    as the value is assigned in the interactive's constructor

                will need setter methods for:
                    belongsTo

                will need a decreaseLimit method
                    checks limit != -1 or 0
                    and then decreases it by 1

                 can add other methods as I find I need them

                 will need getters for all variables

                 the outputMessageEvent class will need a message that they need to output
                 will need to add this to the class and the constructor

                 as well as this i'll need a getter for it

                 the alterRoomEvent class will need a way to store a String of additional data
                 the contents of this String will vary between event types

                 will need a getter method for it

        Now that event items are set up need to alter interactive and obstacle to use them instead of String based events

            first step is to replace the String "...Result"s with events - important to use generic event
            since otherwise only specific subtypes would be allowed.

            also will need to alter the return types of the getter methods and the interaction methods that return events

            after that is done need to alter factory classes

            interactionFactory updated to use event objects over Strings

        now need to alter the game class

            processInput method has an event which is returned from the sub processing method for the specific input format
            will need to make it event - will also need to alter the return values of the two processing methods

            will need to alter the input and event processors,

            for input just need to change variable types

            however for event need to remove the split statement and assign values using the getter's

            the revealItem message takes in a String and uses it to find the item - can replace this with the belongsTo

            can remove the informPlayerItemIsUsedUp method since each event has it's own usedUp msg

            so after processing a String event the method would:
                check the remaining uses was not no limit
                if the uses were limited - do next otherwise stop processing
                uses the cause String to find the item to alter
                decreases the uses left
                generates the flag for usedUp and decreased event
                sets the appropriate flag to be tbe interactive's event flag


            with event based this is pointless -
            can call the decrease method since it accounts for 0 and -1
            no need to do anything else at this stage
            however will need to add a check for limit 0 before any processing occurs

            realised that the interactionType was only needed for the String based system
            since it was used to determine which event variable in the item was to be changed
            and which usedUp message was to be output

            since events are their own items now this is irrelevant

            Now go through the methods for event handling and see what can be replaced in the new system

                can make the methods take in the event instead of tonnes of parameters





    Okay now back to implementing moving rooms
        First step was to give rooms an id which I did

        After that next steps were:
            " will need the save and load methods load method can take in the identifier String to use the map to find the saveString
                will need an event for moving rooms - when this occurs it should:
                    - save the current room need to double check that put will overwrite the last value with that id
                    - load the next room IF that room exists otherwise will generate it for the first time
                    - set the loaded room to the currentRoom may need to give game a setter
                    - output the description of the current room? maybe idk if just moving into it will do that already

                Should have a class to handle loading and saving and moving rooms - can be called in eventProcessor when a move event occurs
                so the room's roomId can be added directly in the room creation method, not passed in as a parameter - NB: not an issue rn
                these ID must be unique but since I control that it's fine
                the fact that I control the roomIds means I can put the id for the desired room directly into the other room's constructor"

        So, first step is to set up the traversalProcessor class - stick it in Processors package

            this will handle the events of moving room - including storing the data on the existing rooms,

            is my idea for Stringifying the the objects a good one?
            - would likely save space complexity at the expense of time complexity
            - bigger hit to time complexity in the long run but also bigger reduction in space complexity
            - moving rooms a lot would mean a LOT of processing
            - each move would need to Stringify the room and every object in it
            - then replace the value in the Map of ID to roomStr
            - then it would need to parse the saveStr for the new room
            - The complexity for the Stringification of an interactive would be O(1) since they're all the same mostly
            - This means that the complexity for the room would be O(N) where N is based on the number of interactives present

            - Process would be:
                - for the room - add description to the String
                - then add the string version of the interactives array
                    - for each interactive need to stringify which involves:
                        - going through and adding each of the values to the String separated by a different separator than the room uses
                        (will need special separators for each segment - one for the room, one for the interactive segment, one for the interactive values etc.)

                    - do the same for obstacles array
                    - then save the relationship between interactives and what obstacles block them
                    - no need to save the other HashMaps since I cna create those easily from the items



    While doing this found that if an interactive had a null event it would cause a NullPointerException when
    trying to assign a belongsTo for a null value - added a check to prevent this in interactive
    and obstacle constructors

    while saving events I'll need a way to check the type of event that is being saved since they have different types
    this will require me to add a type variable to the class

    it is initialised in the subtype constructors to be a specific value - outputMsg, alterRoom etc.

    this lets me know which subtype I should cast the generic event to

    this will allow me to add a check to the save method and load method so that
    they work properly

    that works fine - think I've got separators being added at the end

    so there's an extra array entry separator but not an extra room data separator the method's just not done yet

    issue was that I was looking to stop the inserted separator at the end of the array
    but had used a check for i != length - 2 which lead to it not adding the separator to the penultimate element

    fixed by using a check for i != length - 1


    now need to do the same for obstacles

        for each obstacle:
            need to add the basic interactive data - can use saveInteractive, but do this last since that's how the constructor takes in parameters
            then need to save the rest of the data -
            for the resolvedBy can just use the itemIs of it instead of the whole item since I don't need to generate it

            when split into segments the room data can be isolated, each of these can be split further
            can use the same splitting method used in the interactive section

            obstacles separated by , (need to alter how they're added, insert at the start of item unless it's the first)

    Now to save the blockedBy map
        - why does the map take obstacles that aren't even blocked???
        - if they're not blocked it returns null - but this is the same value as a get to a key that isn't there
        - can probably remove them from the map entirely
        - this was just generally a good idea

        okay so take all the keys and for each one want to put down

        separator [key]:[value]  unless it's the first key then no separator

        forgot to account for null interactives - i.e an empty space

        also removed the originalItemCount variable from room since it was no longer being used

    Should be done, splitting up room data should give:
         - the description
         - the array of items in Str form
         - the array of obstacles in Str form
         - the map of interactives to what blocks them

    I have
         - the description
         - the array of items in str form
         - the array of obstacles in str form
         - two events???
         - the map of items to what blocks them

         issue is probably that the noLimit message has the current room_data_separator in it (" - ")
         need to change the separator maybe use " ^ "

         also need to alter the map process
         - or Do I - issue rn is that need to use itemIs but get null
         but in the final plan can only get null if it's not present
         so since I'm iterating over the keyset it will not be null
         for testing could just block the chocolate bar with the door

         so doing that I found an issue - the blocked error message uses the description not the itemIs

         so ^ is a special char - could try ~


        room data is now separated properly

    can now work on processing it into a room

        data[0] is the description - can be assigned directly to a variable
        data[1] is the list of items - needs to be processed into an array
        data[2] is the list of obstacles - needs to be processed into an array
        data[3] is the map of blockages - needs processed into a map

        can then use the created data[1] and data[2] arrays to create the other maps

        found an issue - interactive needs to save the viability and will need a constructor that takes it in
        obstacle needs it too

        added that - now need to get item creation going

        take in the Array String - split into parts - for each part take all the values - process what needs processed
        then create a new interactive from it and put it in the interactive array

        the first 4 [0] to [3] can be directly passed to a variable or the constructor
        [4] & [5] need a method to load events
        [6] & [7] need to be checked and converted to bool ( could use Str.equals(true) since if true this will give true and if false gives false)

    Now need the loadEvent method:

        all values can be passed in directly

        turns out that '|' is a special character, I'll need to replace it too maybe use " $ "
        also a special char use " # "

    Now for obstacles
        0 -"large key" |
        1 - the key turns, the lock clicks satisfyingly |
        2 - doors have two purposes, to open and to remain closed, this door has chosen the latter |
        3 - the door is already unlocked prodding it more probably won't achieve much |
        4 - you push at the door, it doesn't budge. It must be locked |
        5 - null |
        6 - "wooden door" |
        7 - A large brown wooden door with a rectangular base and rounded top there is a large metal ring for a handle and below it a large keyhole |
        8 - the rough wood of the door seems likely to leave splinters, the door rung is cold and heavy |
        9 - the door swings open slowly, the hinges creaking slightly |
       10 - outputMessage ; winGame ; -1 ; cannot be used up - no limit ; Congratulations you left the room!!!: you have won the game |
       11 - outputMessage ; winGame ; -1 ; cannot be used up - no limit ; Congratulations you left the room!!!: you have won the game |
       12 - false |
       13 - true

       0: need to get the large key from the array of items
       1 - 4: can be added directly
       5: is an event need to use the loadEvent
       6 - 9: can be added directly
       10 - 11: are events need to use loadEvent
       12 - 13: need to use the .equals(true) conversion

       forgot to add solved to the saveString for obstacle - should be segment 6 so added beyond useNonResolvedResult and itemIs

            0 -"large key" |
            1 - the key turns, the lock clicks satisfyingly |
            2 - doors have two purposes, to open and to remain closed, this door has chosen the latter |
            3 - the door is already unlocked prodding it more probably won't achieve much |
            4 - you push at the door, it doesn't budge. It must be locked |
            5 - null |
            6 - solved
            7 - "wooden door" |
            8 - A large brown wooden door with a rectangular base and rounded top there is a large metal ring for a handle and below it a large keyhole |
            9 - the rough wood of the door seems likely to leave splinters, the door rung is cold and heavy |
           10 - the door swings open slowly, the hinges creaking slightly |
           11 - outputMessage ; winGame ; -1 ; cannot be used up - no limit ; Congratulations you left the room!!!: you have won the game |
           12 - outputMessage ; winGame ; -1 ; cannot be used up - no limit ; Congratulations you left the room!!!: you have won the game |
           13 - false |
           14 - true

    Set up the map of blockages

    now need to set up a movement event to initiate traversal

    suppose it comes under alterRoom - no point in making a second type

    actually not much point in any event types at the moment - could just be a variable

    for now don't make any more consider later removing them - or finding reasons types should exist

    now need to test

    first test failed at filling the item map

    got NullPointerException

    cause is that when iterating through the interactives array a taken item will show as null

    when going through I'll need to check for null
    same for obstacles but that is super unlikely to happen

    need to give the event processor access to the game
        - need to give game a setCurrentRoom method

    Found an issue:
        There is an error where if you take the item that solves an obstacle out of the room
        then when recreating the obstacle you can't find the item so solvedBy becomes null
        which breaks it

        to fix - IDK EUGHHHHH! life is pain

        when creating the room I could I suppose take in the player too?
        no cause then if the item is in the room then it still won't be found

        could take the item's id thing - like when you convert it to a String
        this would work as the check maybe?

        can that be used to allocate an item???

        so obj.toString returns a textual representation of the item
            - could using this instead of itemIs work?
            - can that unique string be used to find the object even if

            - no since the rooms that have ben saved are Strings and their objects will have been taken by the garbage collector

        how am I going to ensure that loading the room means the item that relies on another has access to it:

            Okay so what I could do is have a map in traversal processor of all items that currently exist
            this would not require but would be helped by removing some items that will only be used once
            so that the map of itemIs to interactive is less full and some itemIs can be reused
            i.e. the tutorial room key is no longer used outside of the tut room so can be removed
            freeing up "large key" for further use elsewhere

            could give them a separate value that is used for the map
            which contains the room they are present in
            so large key would become - tutorialRoom:large key
            can use the room's id variable since items are created as part of rooms

            this is not needed for the methods that check the current room since they would all have the same value anyway
            - unless you bring in items from outside them - then it's an issue
            - fuck it itemIs can just be replaced with roomid:itemIs

            SO TODO:

                - 1 I'M AN ACTUAL FUCKING MORON
                    - so instead of using the actual item I should use the interactive given's itemIs
                        this would mean that I could avoid needing to store the item in it's entirety
                        and would mean that if the item couldn't be found the itemIs could still be used
                        so if it was in a different room it wouldn't matter since it just needs the itemIs
                        which is just a String that it already stores

                        . need to alter how resolve and obstacles in general work in that way

                - 2 set up the new value of roomid:itemIs for use in identifying items
                        . this can be created in the room's constructor above the item by using the id in the cons and the itemIs allocated to it
                        . this would reduce the need for unique itemIs since it would allow two different large keys
                        . however when adding them there would be an issue since i'd want to use a display vlaue
                             : could just split by : and use the second part - however
                               this would allow for two displayed large keys for example
                               so when adding to description would need to check if one exists already
                               and if so add a 2 to the end and if there are already two add 3 etc.


                - 3 set up items that are removed when used
                        . will require a boolean for singleUse
                        . if singleUse == true and used in resolve then remove them
                        . will want to be absent from obstacle so make private and give an additional constructor that takes it in
                        . this will need to be added to the save process - however since it's private from obstacle
                           i'd need some way of only adding it sometimes
                        . will require a method of removing items from the player's inventory
                        . will also require a method in room for removing the item from the room's data



        So for the first part
            - modified obstacle to store a String that resolves it instead
            - modified the constructors to take in Strings
            - modified the resolve method to take the passed in interactive and take it's itemIs to use it in the check
            - modified the getter for resolvedBy

            - now need to check all other classes to find which are now broke try run code

            toFix:
                .traversalProcessor
                    - was using the getSolvedBy().getItemIs removed getItemIs since it's already that now
                    - the loadObstacle was trying to parse the itemIs into an interactive and passing it into the constructor

                . interactionFactory
                    - factory was using the interactive directly for solvedBy - made it use the itemIs
                    - also forgot to was a thing and had it check it wasn't null before using it to assign the id to the moveRoom event's data
                            - id it was null used "nowhere" which will not be found in the map so will just output an error

            after this running seemed to work
                test time:
                    - take the key and open the door before going through it
                    then go through it again
                    then use the key on it again

                    couldn't find the ID for some reason

                    however this does not work as intended since it leads to a null pointe in main
                    look at the event handler for move room

                    issue is no check for null room

                    if room != null move room and output message otherwise just hte error should appear

                    if err occurs returns null - in handler for event check for null

                    that works now to see why it can't find the room

            The issue I found:
                Debugging shows that the event's eventSpecific is "nowhere"
                this means that the room being passed into the tutorial room is null
                OH - cause a room can't logically lead to itself - need to temporarily change the result of null to tutorialRoom

                Should work now

                THANK FUCK


        Okay having fixed the issue I can move on to the other potential ideas: however something to keep in mind
            - if I use .equals then say - a tree could only be cut down by 1 specific axe:
            this is a dumb idea, if there is more than one axe in existence
                - for now can ignore but some thing to think about could maybe use endsWith to fix that
                then any item that ends with axe - probably only types of axe or axes from other rooms can be used
                whereas if you passed the whole id then it would still work fine since "tutorialRoom:large key" still ends with
                "tutorialRoom:large key" so other checks wouldn't be affected


        NEXT:
            the new itemIs that includes the room and the addTo description part

            steps:
                 - go to roomFactory and for the tutorial room add a String called itemIs prefix
                    it should equal "[room id]:" and will be put before each itemIs created in the cons
                    to do this need to pass it into the interactionFactory create methods as parameter

                 - this should update each of the itemIs to be the processingItemIs so refactor the var to this
                 - afterwards create the displayItemIs
                    this is created in the constructor of the item by taking the itemIs splitting by : and taking the [1] index
                        since it is created in constructor shouldn't need to be added to dave data

                 - will then want to alter the room's desc to use the displayItemIs
                 - will want to give any place where items are checked using itemIs access to the
                    interactive prefix since otherwise they won't be found

                note I will want to remove the object to from wooden doors and make them Strings that ave the id

            step 1 and note done, now check
                had forgotten to actually use the passed in Str

                works fine now


                - Future issue - if two large keys are taken they will have the same display itemIs
                how will the player distinguish between the two?

                could have the take method alter the displayItemIs to have a 2 or 3 etc. on the end if multiple names are found
                however inventory is an array - could give the player a map?

                Or could display the player's inventory at the start of each turn
                and display the processingItemIs there, having the room's desc add the additional numbers to displayItemIs if left
                this would require a change in searching - some searches would use displayItemIs and others would use processingItemIs

                So when interacting with the current room - should use the displayItemIs assuming the additional 2, 3, etc.
                are added when the player leaves an identical displayItemIs item there
                    - when items are taken will need to do a check on the displayItemIs for endsWIth(number) and
                        if it does remove the number to prevent errors in the numbering

                    - numbering method - int i = 1, while the displayItemIs + the number is present in display i++
                        this means if you leave two keys the first will be "large key" and the second will be "large key 1"
                            and if you take out the first large key and add it back it becomes "large key 2" so you don't
                            get confused by what was once "large key 1" now being a different key

                and when interacting with the player's inventory should use the processing itemIs
                to do this I will need to have the Regex allow : since atm that doesn't work

                so first step in this nightmare:
                    implement the creation and getting of displayItemIs
                        - first rename itemIs to fullItemIs  - don't refactor since some uses should be full and some should be display
                            will be easier to find when all the itemIs uses give an error

                        - then create in the constructor the displayItemIs by splitting by : and taking [1]

                        - alter description to use displayItemIs

                        - alter regex to allow :

                        - find and replace uses of itemIs to their corresponding type

                        - create the addNumbers method and insert it in places where it'll be needed
                            - when switching items
                            - when revealing items

                        - create the removeNumbers function and insert it where it's needed
                            - when taking items

                While doing this actually found an issue with the regex for itemVerbItem it required the first item to have at least two words
                in its itemIs - replaced a + with a * for the space word section and now it works fine

                so when are the different itemIs types used???

                    when is itemIs used?
                       interactionFactory
                       roomFactory
                       player
                       obstacle
                       eventProcessor
                       traversalProcessor
                       room

                    From the top:

                        interaction factory:
                            - woodenBox's reveal item event uses the itemIs to show what to be revealed
                                this event works by:
                                    taking in the itemIs to be revealed
                                    then using it along with the itemIs of the item causing the revealing
                                    to alter the room's description

                                    searches in the room for the item to reveal so must use displayItemIs

                            - wooden door takes in an itemIs for the resolution
                            this itemIs shouldn't change so should be the fullItemIs
                                this isn't a check since it takes the item in as part of the method
                                the check that finds the item is probably inventory

                        roomFactory
                            - itemIsToItem needs an itemIs type - used when searching the room should be displayItemIs
                                - same for obstacle map

                        player
                            - hasItemInInventory needs an itemIs to search for
                                - is an inventory search should be fullItemIs

                            - addToInventory needs an itemIs to display when picking up
                                - for charities sake use fullItemIs

                            - switchXwthY has so many problems
                                 - fixed

                        obstacle
                            - resolve uses itemIs to check - need to give it the fullItemIs

                        eventProcessor
                            - the reveal item event has a cause that is displayed -
                            could use either - for now use display

                        traversalProcessor
                            - uses it a lot tbh

                                - saveInteractive takes the interactive's itemIs
                                    when it is loaded it is passed directly in to the constructor
                                    when being created in the factory it is the full itemIs that is added
                                    so save fullItemIs

                                - saving the map requires the itemIs of both types
                                    since it's used to search in the current room use display

                                - for loadRoom there are a few
                                    - when filling the item and obstacle arrays it needed an itemIs
                                        went with display since it's used in searching the room

                    Had doubts about plan so writing it down again
                    The fullIS is used for looking through the player's inventory so they know what's what
                    also used since the itemIs of the solution to an obstacle shouldn't change and
                    just removing the number would mean say any large key could open a door - not what I want
                    the displayIS is used to make the room descriptions look nicer
                    also to search the room since a check for say large key 2 can
                    be used to find the key that corresponds and it can be used with it's fullIS afterwards


                        room
                            - player takes item method removes an itemIs from the items map
                                it uses display so display is used for this
                                error msg also refers to items in the room so use display for that too

                            - switches method checks inventory so use full for that
                                err msg uses the obstacle in a room - use display for it

                            - touched item err msg needs to use display

                            - used item checks inventory need full

                            - use item on obstacle checks the room map and the inventory need display and full respectively
                                err msg needs display

                            - remove from and add too description both need to use the display since they affect the display

                    Every class seems fixed - we'll see if it works

                    it does not - can't find the wooden box

                    issue is that the \" have been wrapped around the whole of the fullItemIs
                    I need to shift them so that they only cover the displayItemIs

                    can find the box now but can't use it

                    issue is that the inserted " as part of processing go to the wrong place
                    when they're added could maybe do a check for ":" and if it's found insert the " afterwards
                    otherwise at the start?

                    happens at the start - uses .substring and the length of the veb to find it
                    want to make that a String that can be checked/ further split

                    that works now I can find and use the wooden box

                    now for switching

                    nothing seems to be happening

                    it happened again with this one where I have \"[fullItemIs]\" instead of having the \" around the displayItemIs

                    though why no error msg - that error was missing one

                    so where does itemVerbItem add the "" and then I need to do the check again

                    seems to work fine


            now on to addNumbers and remove numbers

                for addNumbers can take in the array maybe?
                put the method in interactive - take in the map
                if the map contains the key add a number
                if the map still contains the key ++ the number
                when you reach a number where the key is not present
                alter the item's display itemIs and add it to the map

            this will be used
                when switching and when revealing

                they broke it

                took the methods out - need to reconsider where they go

                so numbers are added - or not - when you add an item to the room or the room's description

                numbers are removed - or not - when you remove an item from the room

                the methods don't add or remove if they don't have to

                so for adding
                    - switching adds an item:
                        so you take an item and leave an item so it should probably do both
                            - if the switch takes place the description is altered
                                want to alter for the take there as well so it isn't altered if it isn't taken

                            - alteration is add to description, remove from description
                                so what to do is:
                                    add numbers before add to desc
                                    remove numbers after remove from desc

                    Didn't work - added a 2 to the wooden box

                    why tho???

                        Issue is that since the switch occurs before this then the key has been removed and the box is present
                        to fix I might need to make the methods directly part of switch and take and alter etc

                        OR might need to move the add and remove from description parts into the method

                        so my issue rn is that if i remove the number before removing from description
                        then the item is not found in description so is not removed

                        and if I add the numbers after adding to description it does nothing

                        possible fix add before switch, remove after desc mod

                        that seems to work for switch


                next add item to room desc event
                    - so the issue with the this is that the item is already present
                        so if I check for it's itemIs being present it'll find itself
                        Issue is If i put a large key in a room with a hidden large key
                        then it will put it down as large key 2
                            also need to format the number addition more replace the last " with the number and a "

                        so I need to check for visible and if it is visible then switch the checked item
                        and if it's not visible need to alter the hidden key

                        This is more complicated than I thought


        TODO:
            Fix issue with adding an item revealing a hidden item by becoming item 2 etc.
            finish implementing the adding and removing of numbers

            either 1 use items or setting up the second room

            fixing issue:
                if the item that has the same displayItemIs is visible then just need to ++ the version and move on
                but if it isn't visible then I'll need to:
                set the current item's display itemIs to that one,
                then call add number to the hidden item
                then maybe put the hidden item back into the map directly in that method to prevent issues since it's displayitemIs now
                doesn't map to anything

                Think I've fixed the formatting issues while also making the add number method look a lot nicer
                    to test i'll need a new room that also has a large key for some reason that I can move back into the tutorial room

                Back to adding and removing numbers where needed:
                    adding - when an item is revealed ??? - maybe not since the item is affected by being hidden now
                    When an item with the same itemIs is added and the main item is hidden
                    the hidden item's itemIs is updated to the added item does not reveal that the hidden item exists by gaining a number

                    however say that other item is then removed and the hidden item is revealed
                    the hidden item should go back to having no number
                    - could as part of add number remove any number if the basic itemIs is not present
                    - wait but if called on a hidden item then it will be present because it is already there
                        - what if I remove the number then add it back when it's revealed
                            that way if the hidden item was altered when there were more items an now there are less then it will be fine
                            and if the same number o items are present it will be fine

                ISSUE:
                    so the revealItemEvent will need to use the full itemIs since the display can change
                        OR the event will need to be of a new type that stores an interactive
                        that might be better - extends alterRoomEvent?
                        - the event specific could be how the interactive is altered i.e reveal etc.

                        BUT: How would I save that??? IDK This is a bit of a mess

                    IDEA:
                        So I can have an addItemEvent that extends the alterRoom event
                        it can use the event specific data to store a reveal msg and also store an iteractive to
                        reveal - this would change how reveal item works and allow for the removal of
                        the hidden system and alteration of reveal item

                        would mean that items that are not "visible" yet do not get
                        in the way of adding items that are since they don't exist in the room yet
                        and when added they can just be added normally

                        would shift processing in saving and loading so one item less would
                        be saved in the saveRoom part but one more would be processed as part of
                        saving the event of an item in the room - no increase in processing

                       TODO:
                        - create the event type
                        - remove the visibility system
                        - implement the event attaching it to the box and adding a working handler in event handler
                        - alter save and load to include this event type

                            removing visibility:
                                - remove variable
                                - remove the variable from constructors
                                - remove getters and setters
                                - open all files see which ones are broken

                                interactionFactory
                                    - since the item is added directly to the box it uses setVisible to say it's hidden
                                    - remove the item directly from the box - the event will be added soon

                                interactive
                                    - the addNumbers has a check for visibility
                                       - think I scrapped it properly might need rechecked
                                    - also had to remove visible from the constructor's arguments and delete te second constructor
                                    - had to do the same for obstacle

                                eventProcessor
                                    - removed content of and renamed the revealItemMethod

                                traversal processor
                                    - saveInteractive stores visible
                                    - load uses visible too
                                    - remove that shit


                                room
                                    - uses visibility to prevent access to items that are hidden
                                        - remove the checks and the error message

                            Pretty sure all references to visibility are now gone


                            Add event to the box
                                could have it used to add an obstacle as long as I give
                                a type variable to interactive that the base constructor sets to inter
                                and the obstacle cons sets to obst
                                    - add the variable to type and make a second interactive constructor
                                    - create a getter method for type
                                    - set it to obst in the obstacle constructor
                                    - add it to the second obstacle constructor - for loading
                                    - add it to the save and load section of interactive and obstacle


                                when the event occurs
                                    - cast eventData to addItem
                                    - output the event specific message
                                    - get the item from the event
                                    - check the item's type

                                Could remove blockedBy map by just making obstacles first and passing the obstacle
                                directly to the interactive's constructor;
                                saving could still just use the itemIs
                                for each item check the value of blockedBy
                                if it's not null then add the two itemIs

                                when loading use the obstacle map already generated to grab the
                                obstacle that blocks the item when loading it

                                would simplify checks but how would it work with saving and loading
                                when an addItemEvent interactive is blocked
                                - how can it be loaded ?
                                Possible but for now not necessary - maybe something to look back on later

                                    - if the item is an inter then add it to items array and the itemIsToItem map
                                    - if the item is an obsta then add it to obstacles array and the itemIsToObstacle map
                                    for now can't be blocked

                                    if I want it to add obstacles too I'll need a second addNumbers method that takes in
                                    a map of <String,obstacle> and does the exact same thing but with obstacles


                            Did some stuf and it's broke - won't show location properly (null)
                            and added a 2 to the key when it shouldn't have

                            So I forgot to remove the key from the room like a fucking Genius
                            So if I remove it from the room how will the door know what opens it???
                            OH - it can exist and get put in the box but just not added to the maps n stuff

                            I'm so smart

                            okay so now it should just be the location that glitches - yep

                            hadn't assigned location in the constructor

            Having implemented the new Event Type I'll need to alter save and load methods to account for it

            go through save method - room saves interactives and obstacles
            interactives and obstacles both save events
            need to alter saveEvent to check for the addItem type

            took in the wrong String for loadItems call in loadEvent - addItem

            issue is that the saving produces the wrong String

            So the cause is that the item being inserted into the event means that
            when the split to load items occurs it breaks the event String
            - to fix I'll need to add another separator and maybe give saveInteractive a parameter to
            hold the separator to use - since it will use one when saving an external item and another when saving
            an item as part of an event

            gave that a shot should check it works properly

            seems fine - gets toAdd allocated properly however location is for some reason the whole item's String
            had forgotten to make it [6] not [5]

            Now seems to work as intended

    Now try to set up the second room I think

        go back by several fucking days to find my idea for the second room

         clearing contains:
                a stream
                a tree
                a bunch of vines
                two blocked paths
                an axe

             The stream blocks one path and the vines block the other
             the vines can be hacked away with the axe
             the tree can be cut down with the axe - this produces material to create a bridge over the river, either the tree or some wood
             the axe is laying by the tree

             will also need a door back into the tutorial room

            May need a resolve event to alter the description when the tree is cut down
            - could have an add itemEvent with type replaceItem that takes the itemIs
            and uses it to find the item (separate event for room and inventory?)
            (no since it would rely on the item always being present it can only really
            affect items that can't be taken or maybe just obstacles)

            so the stream is a blockage resolved by the itm generated when the tree is resolved

                COULD HAVE AN ADD ITEM WITH A LIMIT OVER 1
                    would just need to give it some way of adding a number
                    to the generated item - could use a count that is null unless
                    there is a limit != 1

                    they still can't be limitless though - though 1 could just be the
                    default for not taking a limit like how limitless is for other event types

            So could give the tree a useEvent that generates a bundle of wood
            the branches aren't reachable before the tree is cut down i.e. resolved

            no need for resolve event then
            and currently no need for multi use addItems but would be nice to have

            so process is

            take axe
            chop tree
            use tree
            switch axe with wood
            use wood to bridge river
            use path

            or
            take axe
            cut vines
            use path

            so the river needs to be bridged with an item from the tree
            and the tree is solved with the axe
            the vines are also solved by the axe
            paths are blocked by river and vines

            so create the axe first
            use it's itemIs to create the tree and vines
            create the wood bundle and use it's itemIs to create the river
            them create the door back to the tut room and the two paths

       Might be a good idea to give obstacles a resolve event
        so I can give obstacles an event that alters the obstacle's description
        then re-adds the new description to the map
        and alters the description

            Issue: obstacles are always solved with items from the same room as them
            as they tend to use the fullItemIs using the current isIn
            I could hard code in the desired itemIs BUT
            That could cause issues since I know where the item is from atm
            but if I change that it could be a problem

            could while not fixing the issue give each obstacle a solutionIsIn
            String - since the room factory is where all the item locations are defined

            this would replace the current interactive solution parameter

            the way this works could potentially allow me to say
            use any axe from any room if the solvedBy is "" which would
            mean that the solved by String would be "" + itemIs
            so any axe from any room would match the requirement in obstacle.resolve
            ASSUMING - I alter the resolve check to use endsWith
                which would work because tutorialRoom:large key still ends with tutorialRoom:large key
                so obstacles that have a specific room's item to be bypassed will still work


            Need to set up obstacle with a constructor for a null solutionItemIs
            if it receives this it creates an already solved obstacle,
            I could create interactives that can't be taken but that is
            less effective since it's creating the same item twice

            since it is possible to lose cause that's funny then maybe add a gameLost variable
            and have the loop check both, and the final output can depend on whether it was won or lost

            second room should now be set up

        Now need to update traversal where if the room is not found it passes it to a switch statement
        that contains all the room id's from the room factory
        and if it finds one it creates it and sets the current room to it


        The wooden door is locked when you leave - not ideal
        think I was using the wrong variable in the factory constructor
        fixed it

        Switching the key with the axe leaves an empty space not a key???
        why?

        seems to be that when you switch two items it adds the item first before removing the second item
        which shouldn't really be the case

        surely should remove the axe then put the key in the empty space it leaves behind

        the glade seems to be a bit broken
        can't use the axe on the tree - invalid command format ???
        can go down the blocked wild path?????

        Debug time:

        For some reason the fix I made to the regex that meant it could accept a single word at the start isn't present here
        - bad merging I think

        fixed that - now issues are, axe can't cut tree and can take a supposedly blocked path

        Issue with the tree is probably that I left resolve as .equals not .endsWith

        fixed that now issue is the blocked map not working

        forgot to account for blocked items?

        in room's player used item method forgot to account for the fact that
        items that can't be taken might still be blocked
        probably as obstacles aren't blocked at the moment



        So the second room is implemented and works fine, what's the next step?

        The room after the glade

        we'll have a town entrance, it can have to start:
        a gate
        a guard

        the guard is bribed with chocolate to open the gate
        the gate will be a door to the town proper
        it will be resolved through an event
        will need an event for the guard
        this event will take in an interactive and resolve it
        could rename addItemEvent to alterItemEvent

        issue - the chocolate can be used up
              - will need some way of handling a check for this
              - the use event can check it's own value

            So what I can do
            is create a resolve event for obstacles - guard is an obstacle
                Possible future work is to make people their own class extending interactive
            can give obstacles a boolean called consumeSolution
                if it's true then on resolution the player loses the item
                might need resolve to take in player if I do this
                since i'l need to call a removeFrom inventoryFn
                This would allow me to for example - have chopping down the tree resolve the river obstacle


        Adding resolve event
            first add the variable to the obstacle class
            then to the two constructors
            then make resolve return an event
                specifically the resolveEvent
            find all instances where resolve is used and check the use of the return value for that segment
                go to room useOn methods
                    they call interactive.useOn
                    this need to be altered
                    need it to return event
                I'll need to check game for when useOn is called
                    it'll return null for now so I'll need to make it return the event
                    goes to inputProcessor
                    altered interactive.useOn to return the resolve event
                    then altered inputProcessor to retuen the result o room.playerUsedItemOnObstacle()

            interactionFactory needed resolveEvent added to the obstacle methods

            need to add resolveEvent to the save and load methods in traversalProcessor
